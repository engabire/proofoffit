name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  TURBO_FORCE_LOCAL: 'true'
  CI: 'true'

jobs:
  quality-checks:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Run type check
        run: npm run type-check

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: quality-checks
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - quality-checks
      - unit-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        env:
          NEXT_PUBLIC_SITE_URL: https://www.proofoffit.com

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          if-no-files-found: error
          path: |
            apps/web/.next
            packages/ui/dist

  e2e-tests:
    name: Playwright E2E
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        working-directory: apps/web
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        working-directory: apps/web
        env:
          CI: true
          NEXT_PUBLIC_SITE_URL: http://localhost:3000
        run: npm run test:e2e

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files

      - name: Check Vercel configuration
        run: |
          if [ -z "${{ secrets.VERCEL_TOKEN }}" ] || [ -z "${{ secrets.VERCEL_ORG_ID }}" ] || [ -z "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
            echo "‚ö†Ô∏è Vercel deployment skipped - secrets not configured"
            echo "To enable automatic deployment:"
            echo "1. Add VERCEL_TOKEN, VERCEL_ORG_ID, and VERCEL_PROJECT_ID to repository secrets"
            echo "2. See DEPLOYMENT.md for detailed setup instructions"
            exit 0
          fi

      - name: Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        continue-on-error: true
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: apps/web
          scope: ${{ secrets.VERCEL_ORG_ID }}

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files

      - name: Check Vercel configuration
        run: |
          if [ -z "${{ secrets.VERCEL_TOKEN }}" ] || [ -z "${{ secrets.VERCEL_ORG_ID }}" ] || [ -z "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
            echo "‚ö†Ô∏è Vercel deployment skipped - secrets not configured"
            echo "To enable automatic deployment:"
            echo "1. Add VERCEL_TOKEN, VERCEL_ORG_ID, and VERCEL_PROJECT_ID to repository secrets"
            echo "2. See DEPLOYMENT.md for detailed setup instructions"
            exit 0
          fi

      - name: Deploy to Vercel Production
        uses: amondnet/vercel-action@v25
        continue-on-error: true
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: apps/web
          scope: ${{ secrets.VERCEL_ORG_ID }}

      - name: Wait for deployment
        run: sleep 30

      - name: Verify deployment
        run: |
          echo "üîç Verifying deployment..."
          node scripts/verify-deployment.js
        continue-on-error: true

      - name: Notify on failure
        if: failure()
        run: |
          echo "‚ùå Deployment verification failed!"
          echo "Please check the deployment at https://www.proofoffit.com"
          echo "Run 'node scripts/verify-deployment.js' locally to debug"
