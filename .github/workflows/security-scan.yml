name: Security Scan

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: "0 2 * * *"

env:
  NODE_VERSION: "22"

jobs:
  # CodeQL security analysis
  codeql:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        language: ["javascript"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality
        continue-on-error: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - name: Install dependencies
        run: |
          # Try npm ci first, fallback to npm install if lock file is out of sync
          npm ci || npm install

      - name: Build application
        run: |
          export NEXT_PUBLIC_SUPABASE_URL="https://example.supabase.co"
          export NEXT_PUBLIC_SUPABASE_ANON_KEY="public-anon-key"
          npm run build --workspace packages/ui
          npm run build --workspace web

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
        continue-on-error: true

  # Dependency vulnerability scan
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - name: Install dependencies
        run: |
          # Try npm ci first, fallback to npm install if lock file is out of sync
          npm ci || npm install

      - name: Run security audit
        run: |
          echo "🔍 Running security audit..."
          npm audit --audit-level=moderate --workspace web
          echo "🔍 Running security audit for UI package..."
          npm audit --audit-level=moderate --workspace packages/ui
        continue-on-error: true

      - name: Check for known vulnerabilities
        run: |
          echo "🔍 Checking for known vulnerabilities..."
          npx audit-ci --config audit-ci.json
        continue-on-error: true

  # Secret scanning
  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for hardcoded secrets
        run: |
          set -euo pipefail
          echo "🔍 Scanning for potential secrets..."

          search_paths="apps packages scripts infra"
          patterns=('password\s*=' 'api[_-]?key\s*=' 'secret\s*=')

          for pattern in "${patterns[@]}"; do
            if grep -R -i --perl-regexp "$pattern" $search_paths \
              --exclude-dir=node_modules --exclude-dir=.next --exclude-dir=dist \
              --exclude-dir=.git --exclude='*.test.*' --exclude='*.spec.*' \
              >/dev/null; then
              echo "❌ Potential secret detected matching pattern '$pattern'"
              exit 1
            fi
          done

          echo "✅ No obvious secrets found in allowed paths"

  # License compliance check
  license-check:
    name: License Compliance
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - name: Install dependencies
        run: |
          # Try npm ci first, fallback to npm install if lock file is out of sync
          npm ci || npm install

      - name: Check licenses
        run: |
          echo "🔍 Checking package licenses..."
          npx license-checker --onlyAllow "MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;Unlicense;CC0-1.0;LGPL-3.0-or-later"
        continue-on-error: true

  # Security headers check
  security-headers:
    name: Security Headers Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check security headers
        run: |
          echo "🔍 Checking for security headers in Next.js config..."
          if grep -q "X-Frame-Options" apps/web/next.config.js; then
            echo "✅ X-Frame-Options header found"
          else
            echo "⚠️ X-Frame-Options header not found"
          fi

          if grep -q "X-Content-Type-Options" apps/web/next.config.js; then
            echo "✅ X-Content-Type-Options header found"
          else
            echo "⚠️ X-Content-Type-Options header not found"
          fi

  # Security summary
  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs:
      [codeql, dependency-scan, secret-scan, license-check, security-headers]
    if: always()

    steps:
      - name: Security Scan Summary
        run: |
          echo "## 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Security Checks:" >> $GITHUB_STEP_SUMMARY
          echo "- **CodeQL Analysis:** ${{ needs.codeql.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Dependency Scan:** ${{ needs.dependency-scan.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Secret Scan:** ${{ needs.secret-scan.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **License Check:** ${{ needs.license-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Security Headers:** ${{ needs.security-headers.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.codeql.result }}" == "success" && "${{ needs.dependency-scan.result }}" == "success" && "${{ needs.secret-scan.result }}" == "success" ]]; then
            echo "🎉 **All critical security checks passed!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Some security checks failed. Please review the results.**" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Links:" >> $GITHUB_STEP_SUMMARY
          echo "- [Security Policy](.github/SECURITY_POLICY.md)" >> $GITHUB_STEP_SUMMARY
          echo "- [View Security Tab](https://github.com/${{ github.repository }}/security)" >> $GITHUB_STEP_SUMMARY
